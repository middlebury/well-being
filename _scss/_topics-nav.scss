.topics-nav {
  order: 2;

  @include media(md) {
    max-width: 500px;
    align-self: center;
  }

  @include media(lg) {
    order: 1;
    min-width: 330px;
    padding-right: 30px;
  }

  @include media(xl) {
    min-width: 500px;
    padding-right: 50px;
  }

  @include media(xxl) {
    padding-top: 80px;
  }
}

.topics-nav__list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.topics-nav__item {
  list-style-type: none;
  // margin-bottom: 10px;

  @include media(md) {
  }

  @include media(lg) {
    margin-bottom: 20px;
    background-color: $color-primary;
  }

  @include media(xxxl) {
    margin-bottom: 40px;
  }
}

.topics-nav__anchor {
  color: inherit;
  text-decoration: none;
  padding: 10px 30px;
  display: block;
  border-top: 1px solid $color-secondary-dark;
  position: relative;
  transition: .2s;

  @include media(md) {
    border-top: 0;
    padding: 10px 20px;
  }

  @include media(lg) {
    border-top: 0;
    padding: 0 10px;
    text-align: right;

    // pseudo outside border
    &:after {
      content: '';
      display: block;
      height: 100%;
      left: 100%;
      bottom: 0;
      top: 0;
      width: 2px;
      background-color: $color-secondary-dark;
      position: absolute;
      transition: width .5s;
    }
  }

  &:before {
    transition: border-width .2s;
    backface-visibility: hidden;

    @include media(md) {
      content: '';
      border-top: 2px solid $color-secondary-dark;
      height: 0;
      width: 100px;
      position: absolute;
      left: 0;
      top: 0;
      z-index: -1;
      -webkit-transform-style: preserve-3d;
      -webkit-font-smoothing: subpixel-antialiased;
    }

    @include media(lg) {
      left: 100%;
      top: 50%;
      transform: translateY(-50%);
      width: 200px;
    }
  }

  &.swapper-nav-item--is-active {
    border-top-color: $color-yellow;
    border-top-width: 6px;

    &:before {
      border-width: 6px;
      border-color: $color-yellow;
    }

    // pseudo border
    &:after {
      background-color: $color-yellow;
      width: 5px;
    }
  }
}

// todo: there must be a way to just invert the number instead of using nth()
$rotate-map: 4 5 6 7 4 5 6 7;

@for $i from 1 through 8 {
  @include media(lg) {
    .topics-nav__item:nth-of-type(#{$i}) {
      .topics-nav__anchor:before {
        $inversion: '';

        @if $i > 4 {
          $inversion: '-';
        }

        $degree: nth($rotate-map, $i);

        transform:
          rotate(#{$inversion}#{$degree + 5}deg)
          translateY(#{$inversion}#{$degree * 3}px)
          translateX(3px);
      }
    }
  }
}

.topics-nav__title {
  color: $color-secondary;
  font-weight: 500;
  font-size: 16px;
  transition: .2s;

  @include media(md) {
    font-size: 14px;
  }

  @include media(xl) {
    font-size: 16px;
  }

  .topics-nav__anchor:hover & {
    color: $color-yellow;
  }

  .swapper-nav-item--is-active & {
    color: $color-yellow;
  }
}

.topics-nav__summary {
  font-size: 14px;
  margin-bottom: 10px;

  @include media(md) {
    font-size: 13px;
  }

  @include media(xl) {
    font-size: 14px;
  }
}
