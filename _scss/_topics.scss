.topics {
  display: flex;
  flex-direction: column;

  @include media(md) {
    max-width: 600px;
  }

  @include media(lg) {
    flex-direction: row;
    max-width: 1500px;
  }
}

.topics__intro {
  order: 2;

  p {
    font-size: 21px;
    margin-bottom: 40px;
    font-weight: 300;

    @include media(lg) {
      font-size: 25px;
    }
  }
}

.topics__content {
  height: 100%;
}

.topics-nav {
  order: 2;

  @include media(md) {
    max-width: 500px;
    align-self: center;
  }

  @include media(lg) {
    order: 1;
    min-width: 400px;
    padding-right: 30px;
  }

  @include media(xl) {
    min-width: 500px;
    padding-right: 50px;
  }
}

.topics-nav__list {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.topics-nav__item {
  list-style-type: none;

  @include media(lg) {
    margin-bottom: 20px;
  }

  @include media(xl) {
    // margin-bottom: 20px;
  }
}

.topics-nav__anchor {
  color: inherit;
  text-decoration: none;
  padding: 10px 30px;
  display: block;
  border-top: 1px solid $color-secondary-dark;
  position: relative;
  transition: border-width .2s;

  @include media(md) {
    border-top: 0;
    padding: 10px 20px;
  }

  @include media(lg) {
    border-top: 0;
    border-right: 2px solid $color-secondary-dark;
    padding: 0 10px;
    text-align: right;
  }

  &:before {
    transition: border-width .2s;
    backface-visibility: hidden;

    @include media(md) {
      content: '';
      border-top: 2px solid $color-secondary-dark;
      height: 0;
      width: 100px;
      position: absolute;
      left: 0;
      top: 0;
      z-index: -1;
      -webkit-transform-style: preserve-3d;
      -webkit-font-smoothing: subpixel-antialiased;
    }

    @include media(lg) {
      left: 100%;
      top: 50%;
      transform: translateY(-50%);
      width: 200px;
    }
  }

  &.swapper-nav-item--is-active {
    border-color: $color-yellow;
    border-width: 6px;

    &:before {
      border-width: 6px;
      border-color: $color-yellow;
    }

    strong {
      color: $color-yellow;
    }
  }
}

// todo: there must be a way to just invert the number instead of using nth()
$rotate-map: 4 5 6 7 4 5 6 7;

@for $i from 1 through 8 {
  @include media(lg) {
    .topics-nav__item:nth-of-type(#{$i}) {
      .topics-nav__anchor:before {
        $inversion: '';

        @if $i > 4 {
          $inversion: '-';
        }

        $degree: nth($rotate-map, $i);

        transform:
          rotate(#{$inversion}#{$degree + 5}deg)
          translateY(#{$inversion}#{$degree * 3}px)
          translateX(3px);
      }
    }
  }
}

.topics-nav__title {
  color: $color-secondary;
  font-weight: 500;
  font-size: 16px;
}

.topics-nav__summary {
  font-size: 14px;
  margin-bottom: 10px;
}

.topics-list {
  order: 1;
  position: relative;
}

.topic-article {
  padding: 30px;

  .has-swapper & {
    display: none;
  }

  &.swapper-item--is-active {
    display: block;
  }
}

.topic-article__title {
  color: $color-yellow;
  font-size: 21px;
  margin-top: 0;
  font-weight: 500;
}

.topic-article__content {
  margin-bottom: 50px;

  p:last-child {
    margin-bottom: 0;
  }
}

.topic-article__subtitle {
  color: $color-yellow;
  font-size: 14px;
  font-weight: 500;
  letter-spacing: 0.1em;
  text-transform: uppercase;
}

.resource-list {
  list-style: none;
  margin: 0;
  padding: 0;

  li {
    margin-bottom: 10px;

    a {
      font-size: 14px;
    }
  }
}
